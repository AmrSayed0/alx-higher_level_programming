"""
This module contains a function for multiplying two matrices.

Examples:
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8], [9, 10]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[5, 'a'], [6, 7]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[5, 6, 7], [8, 9, 10], [11, 12, 13]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> matrix_mul([], [])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

>>> matrix_mul([1, 2, 3], [[4, 5], [6, 7]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [5, 6, 7])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

>>> matrix_mul([[1, 2], [3, 'a']], [[4, 5], [6, 7]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

"""

def matrix_mul(m_a, m_b):
    """
    Multiply two matrices.
    
    Arguments:
    m_a -- A list of lists of integers or floats.
    m_b -- A list of lists of integers or floats.
    
    Returns:
    A list of lists of integers or floats representing the product of m_a and m_b.
    
    Raises:
    TypeError: If m_a or m_b is not a list of lists of integers or floats, or if one element of those lists is not an integer or a float, or if m_a or m_b is not a rectangle.
    ValueError: If m_a or m_b is empty, or if m_a and m_b can't be multiplied.
    """
    
    # Implementation of matrix multiplication goes here
    pass
