"""
This module contains a function `matrix_divided(matrix, div)` that divides all elements of a matrix by a given number.

Usage:
    To divide a matrix `m` by a number `d`, call `matrix_divided(m, d)`.

Examples:
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix = [[1, 2], [3, 4], [5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67], [1.0, 1.33], [1.67, 2.0]]

    >>> matrix = [[1, 2], [3, 4], [5, 6]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix = [[1, 2], [3, '4']]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1, 2], [3, 4, 5]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided(42, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[1, 2], [3, 4]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Notes:
    The function rounds the result of the division to 2 decimal places using the built-in `round()` function.
    The function raises a `TypeError` exception with a specific message if the input matrix or `div` argument is not of the correct type or format.
    The function raises a `ZeroDivisionError` exception if `div` is equal to 0.
"""
